{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/SideBar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","e","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","showQuickAddTask","showShouldMain","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","target","Header","darkMode","setDarkMode","shouldShowMain","setShouldShowMain","src","alt","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","SideBar","showProjects","setShowProjects","undefined","Checkbox","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","taskDesc","Content","App","darkModeDefault","render","getElementById"],"mappings":"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","file":"static/js/main.7da6f820.chunk.js","sourcesContent":[" import firebase from \"firebase/app\";\n import \"firebase/firestore\";\n\nconst firebaseConfig = firebase.initializeApp({\n    apiKey: \"AIzaSyBg-p0jZJ5tDdjHiGjTYA8bjNGGgRxO3r0\",\n    authDomain: \"todoist-88c60.firebaseapp.com\",\n    projectId: \"todoist-88c60\",\n    storageBucket: \"todoist-88c60.appspot.com\",\n    messagingSenderId: \"694053797641\",\n    appId: \"1:694053797641:web:6efb5a277d5dfaf6a79dd8\",\n    measurementId: \"G-LJ6703WHWX\"\n});\n\nexport {firebaseConfig as firebase};","export const collatedTasks = [\n  { key: \"INBOX\", name: \"Inbox\" },\n  { key: \"TODAY\", name: \"Today\" },\n  { key: \"NEXT_7\", name: \"Next 7 Days\" },\n];\n","import { collatedTasks } from \"../constants\";\n\nexport const getTitle = (projects, projectId) =>\n  projects.find((project) => project.projectId === projectId);\n\nexport const getCollatedTitle = (projects, key) =>\n  projects.find((project) => project.key === key);\n\nexport const collatedTasksExist = (selectedProject) =>\n  collatedTasks.find((task) => task.key === selectedProject);\n\nexport const generatePushId = (() => {\n  const PUSH_CHARS =\n    \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\n\n  const lastRandChars = [];\n\n  return function () {\n    let now = new Date().getTime();\n\n    const timeStampChars = new Array(8);\n    for (var i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      now = Math.floor(now / 64);\n    }\n\n    let id = timeStampChars.join(\"\");\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    return id;\n  };\n})();\n","import React, { createContext, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useProjects } from \"../hooks\";\n\nexport const ProjectsContext = createContext();\nexport const ProjectsProvider = ({ children }) => {\n  const { projects, setProjects } = useProjects();\n\n  return (\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nexport const useProjectsValue = () => useContext(ProjectsContext);\n","/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { firebase } from \"../firebase\";\nimport { collatedTasksExist } from \"../helpers\";\n\nexport const useTasks = (selectedProject) => {\n  const [tasks, setTasks] = useState([]);\n  const [archivedTasks, setArchivedTasks] = useState([]);\n\n  useEffect(() => {\n    let unsubscribe = firebase\n      .firestore()\n      .collection(\"tasks\")\n      .where(\"userId\", \"==\", \"jlIFXIwyAL3tzHMtzRbw\");\n\n    unsubscribe =\n      selectedProject && !collatedTasksExist(selectedProject)\n        ? (unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject))\n        : selectedProject === \"TODAY\"\n        ? (unsubscribe = unsubscribe.where(\n            \"date\",\n            \"==\",\n            moment().format(\"DD/MM/YYYY\")\n          ))\n        : selectedProject === \"INBOX\" || selectedProject === 0\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\n        : unsubscribe;\n\n    unsubscribe = unsubscribe.onSnapshot((snapshot) => {\n      const newTasks = snapshot.docs.map((task) => ({\n        id: task.id,\n        ...task.data(),\n      }));\n\n      setTasks(\n        selectedProject === \"NEXT_7\"\n          ? newTasks.filter(\n              (task) =>\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\n                task.archived !== true\n            )\n          : newTasks.filter((task) => task.archived !== true)\n      );\n      setArchivedTasks(newTasks.filter((task) => task.archived !== false));\n    });\n\n    return () => unsubscribe();\n  }, [selectedProject]);\n\n  return { tasks, archivedTasks };\n};\n\nexport const useProjects = () => {\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"projects\")\n      .where(\"userId\", \"==\", \"jlIFXIwyAL3tzHMtzRbw\")\n      .orderBy(\"projectId\")\n      .get()\n      .then((snapshot) => {\n        const allProjects = snapshot.docs.map((project) => ({\n          ...project.data(),\n          docId: project.id,\n        }));\n\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n          setProjects(allProjects);\n        }\n      });\n  }, [projects]);\n\n  return { projects, setProjects };\n};\n","import React, { createContext, useContext, useState } from \"react\";\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState(\"INBOX\");\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\n","import React from \"react\";\nimport { useProjectsValue } from \"../context\";\n\nexport const ProjectOverlay = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const { projects } = useProjectsValue();\n\n  return (\n    projects &&\n    showProjectOverlay && (\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\n        <ul className=\"project-overlay__list\">\n          {projects.map((project) => (\n            <li key={project.projectId}>\n              <div\n                data-testid=\"project-overlay-action\"\n                onClick={() => {\n                  setProject(project.projectId);\n                  setShowProjectOverlay(false);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\") {\n                    setProject(project.projectId);\n                    setShowProjectOverlay(false);\n                  }\n                }}\n                role=\"button\"\n                tabIndex={0}\n                aria-label=\"Select the task project\"\n              >\n                {project.name}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\n\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\n  showTaskDate && (\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\n      <ul className=\"task-date__list\">\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().format(\"DD/MM/YYYY\"));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setShowTaskDate(false);\n                setTaskDate(moment().format(\"DD/MM/YYYY\"));\n              }\n            }}\n            data-testid=\"task-date-today\"\n            tabIndex={0}\n            aria-label=\"Select today as the task date\"\n            role=\"button\"\n          >\n            <span>\n              <FaSpaceShuttle />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\n              }\n            }}\n            data-testid=\"task-date-tomorrow\"\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"Select tomorrow as the task date\"\n          >\n            <span>\n              <FaSun />\n            </span>\n            <span>Tomorrow</span>\n          </div>\n        </li>\n        <li>\n          <div\n            onClick={() => {\n              setShowTaskDate(false);\n              setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setShowTaskDate(false);\n                setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\n              }\n            }}\n            data-testid=\"task-date-next-week\"\n            aria-label=\"Select next week as the task date\"\n            tabIndex={0}\n            role=\"button\"\n          >\n            <span>\n              <FaRegPaperPlane />\n            </span>\n            <span>Next week</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n","import React, { useState } from \"react\";\nimport { FaRegListAlt, FaRegCalendarAlt } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { firebase } from \"../firebase\";\nimport { useSelectedProjectValue } from \"../context\";\nimport { ProjectOverlay } from \"./ProjectOverlay\";\nimport { TaskDate } from \"./TaskDate\";\n\nexport const AddTask = ({\n  showAddTaskMain = true,\n  showShouldMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n}) => {\n  const [task, setTask] = useState(\"\");\n  const [taskDate, setTaskDate] = useState(\"\");\n  const [project, setProject] = useState(\"\");\n  const [showMain, setShowMain] = useState(false);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n  const { selectedProject } = useSelectedProjectValue();\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n\n    let collatedDate = \"\";\n    if (projectId === \"TODAY\") {\n      collatedDate = moment().format(\"DD/MM/YYYY\");\n    } else if (projectId === \"NEXT_7\") {\n      collatedDate = moment().add(7, \"days\").format(\"DD/MM/YYYY\");\n    }\n\n    return (\n      task &&\n      projectId &&\n      firebase\n        .firestore()\n        .collection(\"tasks\")\n        .add({\n          archived: false,\n          projectId,\n          task,\n          date: collatedDate || taskDate,\n          userId: \"jlIFXIwyAL3tzHMtzRbw\",\n        })\n        .then(() => {\n          setTask(\"\");\n          setProject(\"\");\n          setShowMain(\"\");\n          setShowProjectOverlay(false);\n        })\n    );\n  };\n\n  return (\n    <div\n      className={showQuickAddTask ? \"add-task add-task__overlay\" : \"add-task\"}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && (\n        <div\n          className=\"add-task__shallow\"\n          data-testid=\"show-main-action\"\n          onClick={() => setShowMain(!showMain)}\n        >\n          <span className=\"add-task__plus\">+</span>\n          <span className=\"add-task__text\">Add Task</span>\n        </div>\n      )}\n\n      {(showMain || showQuickAddTask) && (\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\n          {showQuickAddTask && (\n            <>\n              <div data-testid=\"quick-add-task\">\n                <h2 className=\"header\">Quick Add Task</h2>\n                <span\n                  className=\"add-task__cancel-x\"\n                  data-testid=\"add-task-quick-cancel\"\n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setShowMain(false);\n                    setShowProjectOverlay(false);\n                    setShowQuickAddTask(false);\n                  }}\n                >\n                  X\n                </span>\n              </div>\n            </>\n          )}\n          <ProjectOverlay\n            setProject={setProject}\n            showProjectOverlay={showProjectOverlay}\n            setShowProjectOverlay={setShowProjectOverlay}\n          />\n          <TaskDate\n            setTaskDate={setTaskDate}\n            showTaskDate={showTaskDate}\n            setShowTaskDate={setShowTaskDate}\n          />\n          <input\n            className=\"add-task__content\"\n            aria-label=\"Enter your task\"\n            data-testid=\"add-task-content\"\n            type=\"text\"\n            value={task}\n            onChange={(e) => setTask(e.target.value)}\n          />\n\n          <button\n            type=\"button\"\n            className=\"add-task__submit\"\n            data-testid=\"add-task\"\n            onClick={() =>\n              showQuickAddTask\n                ? addTask() && setShowQuickAddTask(false)\n                : addTask()\n            }\n          >\n            Add Task\n          </button>\n          {!showQuickAddTask && (\n            <span\n              className=\"add-task__cancel\"\n              data-testid=\"add-task-main-cancel\"\n              onClick={() => {\n                setShowMain(false);\n                setShowProjectOverlay(false);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  setShowMain(false);\n                  setShowProjectOverlay(false);\n                }\n              }}\n              aria-label=\"Cancel adding a task\"\n              tabIndex={0}\n              role=\"button\"\n            >\n              Cancel\n            </span>\n          )}\n          <span\n            className=\"add-task__project\"\n            data-testid=\"show-project-overlay\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") setShowProjectOverlay(!showProjectOverlay);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className=\"add-task__date\"\n            data-testid=\"show-task-date-overlay\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") setShowTaskDate(!showTaskDate);\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FaPizzaSlice } from \"react-icons/fa\";\nimport { AddTask } from \"../AddTask\";\n\nexport const Header = ({ darkMode, setDarkMode }) => {\n  const [shouldShowMain, setShouldShowMain] = useState(false);\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n\n  return (\n    <header className=\"header\" data-testid=\"header\">\n      <nav>\n        <div className=\"logo\">\n          <img src=\"/images/logo.png\" alt=\"TodoList\" />\n        </div>\n\n        <div className=\"settings\">\n          <ul>\n            <li className=\"settings__add\">\n              <button\n                data-testid=\"quick-add-task-action\"\n                onClick={() => {\n                  setShowQuickAddTask(true);\n                  setShouldShowMain(true);\n                }}\n              >\n                +\n              </button>\n            </li>\n\n            <li\n              data-testid=\"dark-mode-action\"\n              className=\"settings__darkmode\"\n              onClick={() => setDarkMode(!darkMode)}\n            >\n              <FaPizzaSlice />\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <AddTask\n        showAddTaskMain={false}\n        shouldShowMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\nimport { firebase } from \"../firebase\";\n\nexport const IndividualProject = ({ project }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { projects, setProjects } = useProjectsValue();\n  const { setSelectedProject } = useSelectedProjectValue();\n\n  const deleteProject = (docId) => {\n    firebase\n      .firestore()\n      .collection(\"projects\")\n      .doc(docId)\n      .delete()\n      .then(() => {\n        setProjects([...projects]);\n        setSelectedProject(\"INBOX\");\n      });\n  };\n\n  return (\n    <>\n      <span className=\"sidebar__dot\">•</span>\n      <span className=\"sidebar__project-name\">{project.name}</span>\n      <span\n        className=\"sidebar__project-delete\"\n        data-testid=\"delete-project\"\n        onClick={() => setShowConfirm(!showConfirm)}\n      >\n        <FaTrashAlt />\n        {showConfirm && (\n          <div className=\"project-delete-modal\">\n            <div className=\"project-delete-modal__inner\">\n              <p>Are you sure you want to delete this project?</p>\n              <button\n                type=\"button\"\n                onClick={() => deleteProject(project.docId)}\n              >\n                Delete\n              </button>\n              <span onClick={() => setShowConfirm(!showConfirm)}>Cancel</span>\n            </div>\n          </div>\n        )}\n      </span>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\nimport { IndividualProject } from \"./IndividualProject\";\n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n  // console.log(projects);\n\n  return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n        data-testid=\"project-action-parent\"\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? \"active sidebar__project\"\n            : \"sidebar__project\"\n        }\n      >\n        <div\n          role=\"button\"\n          data-testid=\"project-action\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          <IndividualProject project={project} />\n        </div>\n      </li>\n    ))\n  );\n};\n","import React, { useState } from \"react\";\nimport { firebase } from \"../firebase\";\nimport { generatePushId } from \"../helpers\";\nimport { useProjectsValue } from \"../context\";\n\nexport const AddProject = ({ shouldShow = false }) => {\n  const [show, setShow] = useState(shouldShow);\n  const [projectName, setProjectName] = useState(\"\");\n\n  const projectId = generatePushId();\n  const { projects, setProjects } = useProjectsValue();\n\n  const addProject = () =>\n    projectName &&\n    firebase\n      .firestore()\n      .collection(\"projects\")\n      .add({\n        projectId,\n        name: projectName,\n        userId: \"jlIFXIwyAL3tzHMtzRbw\",\n      })\n      .then(() => {\n        setProjects([...projects]);\n        setProjectName(\"\");\n        setShow(false);\n      });\n\n  return (\n    <div className=\"add-project\" data-testid=\"add-project\">\n      {show && (\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\n          <input\n            value={projectName}\n            onChange={(e) => setProjectName(e.target.value)}\n            className=\"add-project__name\"\n            data-testid=\"project-name\"\n            type=\"text\"\n            placeholder=\"Name your project\"\n          />\n          <button\n            className=\"add-project__submit\"\n            type=\"button\"\n            onClick={() => addProject()}\n            data-testid=\"add-project-submit\"\n          >\n            Add Project\n          </button>\n          <span\n            aria-label=\"Cancel adding project\"\n            data-testid=\"hide-project-overlay\"\n            className=\"add-project__cancel\"\n            onClick={() => setShow(false)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") setShow(false);\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            Cancel\n          </span>\n        </div>\n      )}\n      <span className=\"add-project__plus\">+</span>\n      <span\n        aria-label=\"Add Project\"\n        data-testid=\"add-project-action\"\n        className=\"add-project__text\"\n        onClick={() => setShow(!show)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") setShow(!show);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        Add Project\n      </span>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  FaChevronDown,\n  FaInbox,\n  FaRegCalendarAlt,\n  FaRegCalendar,\n} from \"react-icons/fa\";\nimport { Projects } from \"../Projects\";\nimport { useSelectedProjectValue } from \"../../context\";\nimport { AddProject } from \"../AddProject\";\n\nexport const SideBar = () => {\n  const { setSelectedProject } = useSelectedProjectValue();\n  const [active, setActive] = useState(\"inbox\");\n  const [showProjects, setShowProjects] = useState(true);\n\n  return (\n    <div className=\"sidebar\" data-testid=\"sidebar\">\n      <ul className=\"sidebar__generic\">\n        <li\n          data-testid=\"inbox\"\n          className={active === \"inbox\" ? \"active\" : undefined}\n        >\n          <div\n            data-testid=\"inbox-action\"\n            aria-label=\"Show inbox tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive(\"inbox\");\n              setSelectedProject(\"INBOX\");\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setActive(\"inbox\");\n                setSelectedProject(\"INBOX\");\n              }\n            }}\n          >\n            <span>\n              <FaInbox />\n              &nbsp;&nbsp; <h4>Inbox</h4>\n            </span>\n          </div>\n        </li>\n        <li\n          data-testid=\"today\"\n          className={active === \"today\" ? \"active\" : undefined}\n        >\n          <div\n            data-testid=\"today-action\"\n            aria-label=\"Show today's tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive(\"today\");\n              setSelectedProject(\"TODAY\");\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setActive(\"today\");\n                setSelectedProject(\"TODAY\");\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendar />\n              &nbsp;&nbsp; <h4>Today</h4>\n            </span>\n          </div>\n        </li>\n        <li\n          data-testid=\"next_7\"\n          className={active === \"next_7\" ? \"active\" : undefined}\n        >\n          <div\n            data-testid=\"next_7-action\"\n            aria-label=\"Show tasks for the next 7 days\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive(\"next_7\");\n              setSelectedProject(\"NEXT_7\");\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                setActive(\"next_7\");\n                setSelectedProject(\"NEXT_7\");\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendarAlt />\n              &nbsp;&nbsp; <h4>Next 7 days</h4>\n            </span>\n          </div>\n        </li>\n      </ul>\n      <div\n        className=\"sidebar__middle\"\n        aria-label=\"Show/hide projects\"\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") setShowProjects(!showProjects);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span>\n          <FaChevronDown\n            className={!showProjects ? \"hidden-projects\" : undefined}\n          />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n\n      {showProjects && <AddProject />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { firebase } from \"../firebase\";\n\nexport const Checkbox = ({ id }) => {\n  const archiveTask = () => {\n    firebase.firestore().collection(\"tasks\").doc(id).update({\n      archived: true,\n    });\n  };\n\n  return (\n    <div\n      className=\"checkbox-holder\"\n      data-testid=\"checkbox-action\"\n      onClick={() => archiveTask()}\n    >\n      <span className=\"checkbox\" />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Checkbox } from \"./Checkbox\";\nimport { useTasks } from \"../hooks\";\nimport { collatedTasks } from \"../constants\";\nimport { getTitle, getCollatedTitle, collatedTasksExist } from \"../helpers\";\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\nimport { AddTask } from \"./AddTask\";\nexport const Tasks = () => {\n  const { selectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n  const { tasks } = useTasks(selectedProject);\n  // console.log(\"selected proj \", selectedProject);\n  // console.log(\"proj \", projects);\n  // console.log(\"tasks \", tasks);\n  let projectName = \"\";\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (\n    projects &&\n    projects.length > 0 &&\n    selectedProject &&\n    !collatedTasksExist(selectedProject)\n  ) {\n    projectName = getTitle(projects, selectedProject).name;\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Todoist`;\n  });\n\n  return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      <ul className=\"tasks__list\">\n        {tasks.map((task) => (\n          <li key={`${task.id}`}>\n            <Checkbox id={task.id} taskDesc={task.task} />\n            <span>{task.task}</span>\n          </li>\n        ))}\n      </ul>\n\n      <AddTask />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { SideBar } from \"./SideBar\";\nimport { Tasks } from \"../Tasks\";\nexport const Content = () => (\n  <section className=\"content\">\n    <SideBar />\n    <Tasks />\n  </section>\n);\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { Header } from \"./components/layout/Header\";\nimport { Content } from \"./components/layout/Content\";\nimport { ProjectsProvider, SelectedProjectProvider } from \"./context\";\nexport const App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n\n  return (\n    <SelectedProjectProvider>\n      <ProjectsProvider>\n        <main\n          data-testid=\"application\"\n          className={darkMode ? \"darkmode\" : undefined}\n        >\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n        </main>\n      </ProjectsProvider>\n    </SelectedProjectProvider>\n  );\n};\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\nrender(<App />,document.getElementById('root'));\n"],"sourceRoot":""}